Мета роботи 
Метою роботи є ознайомлення з основними методами рефакторингу коду 
програмного забезпечення на прикладах з книги Роберта Мартіна "Чистий код", 
їх аналіз та демонстрація практичного застосування для покращення 
читабельності, підтримуваності та ефективності програмного забезпечення. 
У звіті розглянуто три методи рефакторингу: Витягування методу (Extract 
Method), Заміна тимчасової змінної запитом (Replace Temp with Query) та 
Введення об'єкта параметра (Introduce Parameter Object). Нижче наведено опис 
кожного методу та приклади його застосування. 
Метод 1: Витягування методу (Extract Method) 
Цей метод передбачає виділення частини коду з великого методу в 
окремий метод із самодокументувальною назвою. Це зменшує довжину методу, 
покращує читабельність і повторне використання коду. 
Приклад до рефакторингу: 
void printDetails() { 
System.out.println("Name: " + name); 
System.out.println("Age: " + age); 
System.out.println("Address: " + address); 
} 
Приклад після рефакторингу: 
void printDetails() { 
printPersonalInfo(); 
} 
void printPersonalInfo() { 
System.out.println("Name: " + name); 
System.out.println("Age: " + age); 
System.out.println("Address: " + address); 
} 
Метод 2: Заміна тимчасової змінної запитом (Replace Temp with Query) 
Цей метод замінює локальну змінну, яка використовується для зберігання 
проміжних результатів, викликом методу. Це дозволяє уникнути побічних 
ефектів від змін змінної та покращує зрозумілість коду. 
Приклад до рефакторингу: 
double basePrice = quantity * price; 
if (basePrice > 1000) { 
return basePrice * 0.95; 
} 
Приклад після рефакторингу: 
if (getBasePrice() > 1000) { 
return getBasePrice() * 0.95; 
} 
double getBasePrice() { 
return quantity * price; 
} 
Метод 3: Введення об'єкта параметра (Introduce Parameter Object) 
Цей метод передбачає групування пов'язаних параметрів у окремий об'єкт. Це 
зменшує кількість параметрів у методах та покращує узгодженість даних. 
Приклад до рефакторингу: 
void setCoordinates(int x, int y) { 
this.x = x; 
this.y = y; 
} 
Приклад після рефакторингу: 
void setCoordinates(Point point) { 
this.x = point.getX(); 
this.y = point.getY(); 
} 
Висновок 
У ході роботи було розглянуто три методи рефакторингу з книги "Чистий 
код". Кожен з них спрямований на покращення читабельності, підтримуваності 
та ефективності програмного коду. Рефакторинг є невід'ємною частиною 
сучасної розробки програмного забезпечення, що дозволяє уникнути 
накопичення технічного боргу та сприяє створенню якісного продукту. 
Посилання на відео: https://youtu.be/DXlxVk8rJr0