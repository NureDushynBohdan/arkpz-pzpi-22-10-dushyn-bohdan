Загальний опис системи
Система призначена для управління акваріумами та взаємодії з IoT-сенсорами для моніторингу параметрів води. Основними учасниками системи є:
•	Техніки: відповідальні за обслуговування акваріумів.
•	Клієнти: власники акваріумів.
•	Адміністратори: керують системою та мають доступ до логів.
Система реалізована на основі фреймворку FastAPI для створення RESTful API. Взаємодія з базою даних здійснюється через SQLAlchemy ORM.
Архітектурні рішення
Серверна частина:
•	Створено REST API для взаємодії з клієнтами.
•	Реалізовано CRUD-операції для основних сутностей: техніків, клієнтів, акваріумів та сенсорів.
База даних:
•	Використано MySQL для зберігання даних.
•	Створено таблиці з відношеннями для забезпечення цілісності даних.
Бізнес-логіка:
•	Перевірка доступності техніка для призначення до акваріума.
•	Обробка даних із сенсорів для моніторингу параметрів води.
Адміністрування:
•	Реалізовано функції видалення користувачів та оновлення їх ролей.
•	Логування дій у системі.
2. Специфікація API для взаємодії серверної частини з клієнтами
Основні ендпоїнти
1. Техніки
•	POST /technicians/: створення техніка.
•	GET /technicians/: отримання списку всіх техніків.
•	DELETE /technicians/{technician_id}/: видалення техніка за ID.
2. Акваріуми
•	POST /aquariums/: створення акваріума.
•	GET /aquariums/: отримання списку всіх акваріумів.
•	DELETE /aquariums/{aquarium_id}/: видалення акваріума за ID.
3. Сенсори IoT
•	POST /sensors/: створення сенсора.
•	GET /sensors/: отримання списку всіх сенсорів.
•	DELETE /sensors/{sensor_id}/: видалення сенсора за ID.
4. Адміністрування
•	DELETE /admin/users/{user_id}/: видалення користувача.
•	PUT /admin/users/{user_id}/role/: оновлення ролі користувача.
5. Дані сенсорів
•	POST /api/data: отримання даних від сенсора.
•	GET /api/sensor-data: отримання всіх записів даних сенсорів.

